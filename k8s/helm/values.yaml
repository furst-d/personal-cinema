# Default values for k8s.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: ""
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    cert-manager.io/cluster-issuer: letsencrypt
  tls:
    - hosts:
        - admin.soukromekino.cz
        - api.soukromekino.cz
        - file.soukromekino.cz
        - admin.file.soukromekino.cz
      secretName: personal-cinema-tls
  hosts:
    - host: admin.soukromekino.cz
      paths:
        - path: /
          pathType: Prefix
    - host: api.soukromekino.cz
      paths:
        - path: /
          pathType: Prefix
    - host: file.soukromekino.cz
      paths:
        - path: /
          pathType: Prefix
    - host: admin.file.soukromekino.cz
      paths:
        - path: /
          pathType: Prefix

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
#   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

adminFrontend:
  image:
    repository: furstd/personal-cinema_frontend_admin
    tag: latest
  replicaCount: 2
  service:
    type: ClusterIP
    port: 80
  containerPort: 4174

backend:
  image:
    repository: furstd/personal-cinema_backend
    tag: latest
  replicaCount: 2
  service:
    type: ClusterIP
    port: 80
  containerPort: 9000
  db:
    image:
      repository: postgres
      tag: "13"
    storage: "10Gi"
  secret:
    POSTGRES_DB: db_name
    POSTGRES_USER: db_user
    POSTGRES_PASSWORD: db_password
  config:
    DATABASE_URL: "postgres://{{ .Values.backend.secret.POSTGRES_USER }}:{{ .Values.backend.secret.POSTGRES_PASSWORD }}@postgres:5432/{{ .Values.backend.secret.POSTGRES_DB }}"

cdnBackend:
  image:
    repository: furstd/personal-cinema_backend_cdn
    tag: latest
  replicaCount: 2
  service:
    type: ClusterIP
    port: 80
  containerPort: 4000
  db:
    image:
      repository: postgres
      tag: "13"
    storage: "10Gi"
  minio:
    image: minio/minio
    storage: "10Gi"
    ports:
      - 9000
      - 9001
  redis:
    image: redis
    port: 6379
  secret:
    POSTGRES_DB: db_name
    POSTGRES_USER: db_user
    POSTGRES_PASSWORD: db_password
    MINIO_ROOT_USER: minio_user
    MINIO_ROOT_PASSWORD: minio_password
    REDIS_PASSWORD: redis_password

frontend:
  image:
    repository: furstd/personal-cinema_frontend
    tag: latest
  replicaCount: 2
  service:
    type: ClusterIP
    port: 80
  containerPort: 4173
