name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Replace environment variables in .env file
        run: |
          cp backend/.env.example backend/.env
          cp backend/symfony/.env.example backend/symfony/.env
          sed -i 's/db_name/${{ secrets.POSTGRES_DB }}/' backend/.env
          sed -i 's/db_user/${{ secrets.POSTGRES_USER }}/' backend/.env
          sed -i 's/db_password/${{ secrets.POSTGRES_PASSWORD }}/' backend/.env
          sed -i 's/app_secret/${{ secrets.APP_SECRET }}/' backend/symfony/.env
          sed -i 's/jwt_passphrase/${{ secrets.JWT_PASSPHRASE }}/' backend/symfony/.env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend Docker images
        run: |
          docker build ./backend -t furstd/personal-cinema_backend:latest 
          docker push furstd/personal-cinema_backend:latest
          docker build -f ./backend/nginx/Dockerfile -t furstd/personal-cinema_nginx:latest ./backend
          docker push furstd/personal-cinema_nginx:latest

      - name: Build and push frontend Docker images
        run: |
          docker build ./frontend -t furstd/personal-cinema_frontend:latest 
          docker push furstd/personal-cinema_frontend:latest

      - name: Deploy to VPS
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USER: ${{ secrets.VPS_USER }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key
          mkdir -p ~/.ssh
          ssh-keyscan $VPS_HOST >> ~/.ssh/known_hosts
          ssh -i private_key -T $VPS_USER@$VPS_HOST << 'EOF'
            mkdir -p /opt/soukromekino/backend/symfony
            mkdir -p /opt/soukromekino/frontend
          EOF
          scp -i private_key backend/docker-compose.prod.yml $VPS_USER@$VPS_HOST:/opt/soukromekino/backend/
          scp -i private_key frontend/docker-compose.prod.yml $VPS_USER@$VPS_HOST:/opt/soukromekino/frontend/
          scp -i private_key traefik/docker-compose.yml $VPS_USER@$VPS_HOST:/opt/soukromekino/traefik/
          scp -i private_key traefik/traefik.toml $VPS_USER@$VPS_HOST:/opt/soukromekino/traefik/
          scp -i private_key backend/.env $VPS_USER@$VPS_HOST:/opt/soukromekino/backend/.env
          scp -i private_key backend/symfony/.env $VPS_USER@$VPS_HOST:/opt/soukromekino/backend/symfony/.env
          ssh -i private_key -T $VPS_USER@$VPS_HOST << 'EOF'
            docker-compose -f /opt/soukromekino/backend/docker-compose.prod.yml pull
            docker-compose -f /opt/soukromekino/frontend/docker-compose.prod.yml pull
            docker-compose -f /opt/soukromekino/traefik/docker-compose.yml down
            docker-compose -f /opt/soukromekino/backend/docker-compose.prod.yml down
            docker-compose -f /opt/soukromekino/frontend/docker-compose.prod.yml down
            docker-compose -f /opt/soukromekino/backend/docker-compose.prod.yml up -d
            docker-compose -f /opt/soukromekino/frontend/docker-compose.prod.yml up -d
            docker-compose -f /opt/soukromekino/traefik/docker-compose.yml up -d
          EOF
