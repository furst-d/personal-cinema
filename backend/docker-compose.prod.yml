version: '3.8'

services:
  php-fpm:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./symfony:/var/www:rw
    working_dir: /var/www
    networks:
      - backend
    command: sh -c "chown -R appuser:appuser /var/www/var/log && chmod -R 775 /var/www/var/log && composer install && php-fpm"
    env_file:
      - ./.env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend_php.rule=Host(`api.soukromekino.cz`)"
      - "traefik.http.routers.backend_php.entrypoints=websecure"
      - "traefik.http.routers.backend_php.tls.certresolver=letsencrypt"
      - "traefik.http.services.backend_php.loadbalancer.server.port=9000"

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/fastcgi-php.conf:/etc/nginx/fastcgi-php.conf
      - ./symfony:/var/www
    networks:
      - backend
    depends_on:
      - php-fpm
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend_nginx.rule=Host(`api.soukromekino.cz`)"
      - "traefik.http.routers.backend_nginx.entrypoints=websecure"
      - "traefik.http.routers.backend_nginx.tls.certresolver=letsencrypt"
      - "traefik.http.services.backend_nginx.loadbalancer.server.port=80"

  db:
    image: postgres:13
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - backend

networks:
  backend:
    name: backend
    driver: bridge

volumes:
  db_data: